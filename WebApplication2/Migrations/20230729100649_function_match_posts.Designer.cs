// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pgvector;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(ItemDbContext))]
    [Migration("20230729100649_function_match_posts")]
    partial class function_match_posts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Data.SearchResultItem", b =>
                {
                    b.Property<double>("DescriptionSimilarity")
                        .HasColumnType("double precision")
                        .HasColumnName("description_similarity");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("NameSimilarity")
                        .HasColumnType("double precision")
                        .HasColumnName("name_similarity");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("WebApplication2.Data.WoocommercePost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_woocommerce_posts");

                    b.ToTable("woocommerce_posts", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Data.WoocommercePost", b =>
                {
                    b.OwnsOne("WebApplication2.Data.EmbeddingData", "DescriptionEmbedding", b1 =>
                        {
                            b1.Property<long>("WoocommercePostId")
                                .HasColumnType("bigint")
                                .HasColumnName("id");

                            b1.Property<string>("HashId")
                                .HasColumnType("text")
                                .HasColumnName("description_embedding_hash_id");

                            b1.Property<Vector>("Vector")
                                .HasColumnType("vector(1536)")
                                .HasColumnName("description_embedding_vector");

                            b1.HasKey("WoocommercePostId");

                            b1.HasIndex("Vector")
                                .HasDatabaseName("ix_woocommerce_posts_description_embedding_vector");

                            NpgsqlIndexBuilderExtensions.HasMethod(b1.HasIndex("Vector"), "ivfflat");
                            NpgsqlIndexBuilderExtensions.HasOperators(b1.HasIndex("Vector"), new[] { "vector_cosine_ops" });

                            b1.ToTable("woocommerce_posts");

                            b1.WithOwner()
                                .HasForeignKey("WoocommercePostId")
                                .HasConstraintName("fk_woocommerce_posts_woocommerce_posts_id");
                        });

                    b.OwnsOne("WebApplication2.Data.EmbeddingData", "NameEmbedding", b1 =>
                        {
                            b1.Property<long>("WoocommercePostId")
                                .HasColumnType("bigint")
                                .HasColumnName("id");

                            b1.Property<string>("HashId")
                                .HasColumnType("text")
                                .HasColumnName("name_embedding_hash_id");

                            b1.Property<Vector>("Vector")
                                .HasColumnType("vector(1536)")
                                .HasColumnName("name_embedding_vector");

                            b1.HasKey("WoocommercePostId");

                            b1.HasIndex("Vector")
                                .HasDatabaseName("ix_woocommerce_posts_name_embedding_vector");

                            NpgsqlIndexBuilderExtensions.HasMethod(b1.HasIndex("Vector"), "ivfflat");
                            NpgsqlIndexBuilderExtensions.HasOperators(b1.HasIndex("Vector"), new[] { "vector_cosine_ops" });

                            b1.ToTable("woocommerce_posts");

                            b1.WithOwner()
                                .HasForeignKey("WoocommercePostId")
                                .HasConstraintName("fk_woocommerce_posts_woocommerce_posts_id");
                        });

                    b.Navigation("DescriptionEmbedding");

                    b.Navigation("NameEmbedding");
                });
#pragma warning restore 612, 618
        }
    }
}
